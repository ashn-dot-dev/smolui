import "c";
import "std";

import "raylib";

import "microui.sunder";
import "murl.sunder";
import "smolui.sunder";

var checked: sint = 0;
var slider: float = 0.0;
var number: float = 0.0;
var buf = (:[256]byte)[0...];

func main() void {
    InitWindow(800, 600, startof("demo"));
    defer CloseWindow();
    SetTargetFPS(60);

    var ctx = smolui::mu_context_new();
    defer smolui::mu_context_del(ctx);
    mu_init(ctx);
    murl_setup_font_ex(ctx, std::ptr[[Font]]::NULL);

    for not WindowShouldClose() {
        BeginDrawing();
        ClearBackground(BLACK);

        murl_handle_input(ctx);
        mu_begin(ctx);

        if mu_begin_window(ctx, startof("Hello"), (:mu_Rect){.x = 20, .y = 20, .w = 400, .h = 300}) != 0 {
            mu_text(ctx, startof("text"));

            mu_checkbox(ctx, startof("checkbox"), &checked);

            mu_slider(ctx, &slider, 0.0, 100.0);

            mu_number(ctx, &number, 2.0);

            mu_label(ctx, startof("Hello, raylib"));

            if mu_header(ctx, startof("Header")) != 0 {
                mu_text(ctx, startof("text under header"));
            }

            if mu_begin_treenode(ctx, startof("Treenode")) != 0 {
                mu_text(ctx, startof("text under treenode"));
                mu_end_treenode(ctx);
            }

            if mu_button(ctx, startof("The button")) != 0 {
                mu_open_popup(ctx, startof("popup"));
            }

            if mu_begin_popup(ctx, startof("popup")) != 0 {
                mu_label(ctx, startof("This is a popup"));
                mu_end_popup(ctx);
            }

            mu_begin_panel(ctx, startof("panel"));
            mu_text(ctx, startof("text under panel"));
            mu_end_panel(ctx);

            mu_textbox(ctx, &buf[0], (:sint)countof(buf));

            mu_end_window(ctx);
        }

        mu_end(ctx);
        murl_render(ctx);
        EndDrawing();
    }
}
